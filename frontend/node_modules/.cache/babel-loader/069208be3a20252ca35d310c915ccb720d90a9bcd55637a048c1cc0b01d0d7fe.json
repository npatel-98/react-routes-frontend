{"ast":null,"code":"var _jsxFileName = \"/Volumes/Macintosh HD - Data/react-routes/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport React, { Suspense } from 'react';\nimport { Await, json, redirect, useRouteLoaderData, defer } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport EventsList from '../components/EventsList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 28\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n          event: loadedEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 28\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(EventDetailPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  console.log(\"Event ID :\", id);\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details of selected event\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.details;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //...\n    // return { isError: true, message: \"Could not fetch events.\"};\n    // throw new Response( JSON.stringify({ message: \"Could not fetch events\"}), { status: 500} );\n    return json({\n      message: \"could not fetch data\"\n    }, {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    // return resData.events;\n    // const res = new Response('any data', {status: 201});\n    // return res;\n    return resData.events;\n  }\n}\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  return defer({\n    event: await loadEvent(id),\n    events: loadEvents()\n  });\n}\nexport async function action(_ref2) {\n  let {\n    params,\n    request\n  } = _ref2;\n  const eventId = params.eventId;\n  const resp = fetch(\"http://localhost:8080/events/\" + eventId, {\n    method: request.method\n  });\n  if (!resp.ok) {\n    throw json({\n      message: \"Could not delete event\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","Suspense","Await","json","redirect","useRouteLoaderData","defer","EventItem","EventsList","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvent","loadedEvents","_c","loadEvent","id","console","log","response","fetch","ok","message","status","resData","details","loadEvents","loader","_ref","request","params","eventId","action","_ref2","resp","method","$RefreshReg$"],"sources":["/Volumes/Macintosh HD - Data/react-routes/frontend/src/pages/EventDetail.js"],"sourcesContent":["import React, { Suspense } from 'react'\nimport { Await, json, redirect, useRouteLoaderData, defer } from 'react-router-dom'\nimport EventItem from '../components/EventItem';\nimport EventsList from '../components/EventsList';\n\nconst EventDetailPage = () => {\n  const { event, events } =  useRouteLoaderData('event-detail');\n\n  return (\n    <>\n      <Suspense fallback={ <p style={{textAlign: 'center' }}>Loading...</p>}>\n        <Await resolve={event}>\n          {\n            loadedEvent =>  <EventItem event={loadedEvent} />\n          }\n        </Await>\n      </Suspense>\n      <Suspense fallback={ <p style={{textAlign: 'center' }}>Loading...</p>}>\n        <Await resolve={events}>\n          {\n            loadedEvents => <EventsList events={loadedEvents} />\n          }\n        </Await>\n      </Suspense>\n    </>\n  )\n}\n\nexport default EventDetailPage;\n\n\nasync function loadEvent(id){\n  console.log(\"Event ID :\",id);\n  const response = await fetch('http://localhost:8080/events/'+id);\n  \n  if(!response.ok){\n    throw json({message:\"Could not fetch details of selected event\"}, {\n      status: 500,\n    })\n  }else{\n    const resData = await response.json();\n    return resData.details;\n  }\n  \n}\n\nasync function loadEvents(){\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n      //...\n      // return { isError: true, message: \"Could not fetch events.\"};\n      // throw new Response( JSON.stringify({ message: \"Could not fetch events\"}), { status: 500} );\n      return json({ message: \"could not fetch data\"}, { status: 500,})\n  } else {\n      const resData = await response.json();\n      // return resData.events;\n      // const res = new Response('any data', {status: 201});\n      // return res;\n      return resData.events;\n  }\n}\n\nexport async function loader({request, params}){\n\n  const id = params.eventId;\n\n  return defer({\n    event: await loadEvent(id),\n    events: loadEvents(),\n  })\n\n}\n\nexport async function action({ params, request }){\n  const eventId = params.eventId;\n  const resp = fetch (\"http://localhost:8080/events/\"+eventId, {\n    method: request.method\n  });\n  if(!resp.ok){\n    throw json({message:\"Could not delete event\"}, {\n      status: 500,\n    })\n  }\n\n  return redirect('/events');\n  \n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}