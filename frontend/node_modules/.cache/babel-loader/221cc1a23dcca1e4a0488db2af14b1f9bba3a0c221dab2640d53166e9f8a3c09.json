{"ast":null,"code":"var _jsxFileName = \"/Volumes/Macintosh HD - Data/react-routes/frontend/src/pages/NewEventPage.js\";\nimport React from 'react';\nimport EventForm from '../components/EventForm';\nimport { json, redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewEventPage = () => {\n  return /*#__PURE__*/_jsxDEV(EventForm, {\n    method: \"post\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = NewEventPage;\nexport default NewEventPage;\nexport async function action(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: \"Could not save event.\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["React","EventForm","json","redirect","jsxDEV","_jsxDEV","NewEventPage","method","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","_ref","request","params","data","formData","eventData","title","get","image","date","description","response","fetch","headers","body","JSON","stringify","status","ok","message","$RefreshReg$"],"sources":["/Volumes/Macintosh HD - Data/react-routes/frontend/src/pages/NewEventPage.js"],"sourcesContent":["import React from 'react'\nimport EventForm from '../components/EventForm'\nimport { json, redirect } from 'react-router-dom';\n\nconst NewEventPage = () => {\n\n  return (\n    <EventForm method=\"post\" />\n  )\n}\n\nexport default NewEventPage\n\nexport async function action({ request, params }){\n  const data = await request.formData();\n\n  const eventData = {\n    title: data.get('title'), \n    image: data.get('image'), \n    date: data.get('date'), \n    description: data.get('description'), \n  }\n\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": 'application/json',\n    },\n    body: JSON.stringify(eventData) \n  });\n\n  if(response.status === 422){\n    return response;\n  }\n\n  if( !response.ok){\n    throw json({ message: \"Could not save event.\"}, { status: 500 });\n  }\n\n  return redirect('/events');\n} "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAEzB,oBACED,OAAA,CAACJ,SAAS;IAACM,MAAM,EAAC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAE/B,CAAC;AAAAC,EAAA,GALKN,YAAY;AAOlB,eAAeA,YAAY;AAE3B,OAAO,eAAeO,MAAMA,CAAAC,IAAA,EAAqB;EAAA,IAApB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EAC9C,MAAMG,IAAI,GAAG,MAAMF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,KAAK,EAAEL,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBE,IAAI,EAAEN,IAAI,CAACI,GAAG,CAAC,MAAM,CAAC;IACtBG,WAAW,EAAEP,IAAI,CAACI,GAAG,CAAC,aAAa;EACrC,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC3DnB,MAAM,EAAE,MAAM;IACdoB,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,SAAS;EAChC,CAAC,CAAC;EAEF,IAAGM,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAC;IACzB,OAAON,QAAQ;EACjB;EAEA,IAAI,CAACA,QAAQ,CAACO,EAAE,EAAC;IACf,MAAM9B,IAAI,CAAC;MAAE+B,OAAO,EAAE;IAAuB,CAAC,EAAE;MAAEF,MAAM,EAAE;IAAI,CAAC,CAAC;EAClE;EAEA,OAAO5B,QAAQ,CAAC,SAAS,CAAC;AAC5B;AAAC,IAAAS,EAAA;AAAAsB,YAAA,CAAAtB,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}