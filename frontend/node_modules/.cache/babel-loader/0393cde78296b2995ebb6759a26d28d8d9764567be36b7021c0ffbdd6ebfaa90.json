{"ast":null,"code":"var _jsxFileName = \"/Volumes/Macintosh HD - Data/react-routes/frontend/src/pages/Events.js\",\n  _s = $RefreshSig$();\nimport EventsList from '../components/EventsList';\nimport { useLoaderData, json } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  const events = data.events;\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events11');\n  if (!response.ok) {\n    //...\n    // return { isError: true, message: \"Could not fetch events.\"};\n    // throw new Response( JSON.stringify({ message: \"Could not fetch events\"}), { status: 500} );\n    return json({\n      message: \"could not fetch data\"\n    }, {\n      status: 500\n    });\n  } else {\n    // const resData = await response.json();\n    // return resData.events;\n    // const res = new Response('any data', {status: 201});\n    // return res;\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","json","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","status","$RefreshReg$"],"sources":["/Volumes/Macintosh HD - Data/react-routes/frontend/src/pages/Events.js"],"sourcesContent":["import EventsList from '../components/EventsList';\nimport { useLoaderData, json } from 'react-router-dom';\n\nfunction EventsPage() {\n    const data = useLoaderData();\n    const events = data.events;\n    if(data.isError){\n        return <p>{data.message}</p>\n    }\n    return (\n        <>\n            <EventsList events={events} />\n        </>\n    );\n}\n\nexport default EventsPage;\n\nexport async function loader(){\n    const response = await fetch('http://localhost:8080/events11');\n    if (!response.ok) {\n        //...\n        // return { isError: true, message: \"Could not fetch events.\"};\n        // throw new Response( JSON.stringify({ message: \"Could not fetch events\"}), { status: 500} );\n        return json({ message: \"could not fetch data\"}, { status: 500,})\n    } else {\n        // const resData = await response.json();\n        // return resData.events;\n        // const res = new Response('any data', {status: 201});\n        // return res;\n        return response;\n    }\n}"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAMC,IAAI,GAAGR,aAAa,CAAC,CAAC;EAC5B,MAAMS,MAAM,GAAGD,IAAI,CAACC,MAAM;EAC1B,IAAGD,IAAI,CAACE,OAAO,EAAC;IACZ,oBAAOP,OAAA;MAAAQ,QAAA,EAAIH,IAAI,CAACI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAChC;EACA,oBACIb,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACIR,OAAA,CAACJ,UAAU;MAACU,MAAM,EAAEA;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAChC,CAAC;AAEX;AAACT,EAAA,CAXQD,UAAU;EAAA,QACFN,aAAa;AAAA;AAAAiB,EAAA,GADrBX,UAAU;AAanB,eAAeA,UAAU;AAEzB,OAAO,eAAeY,MAAMA,CAAA,EAAE;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;EAC9D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IACd;IACA;IACA;IACA,OAAOpB,IAAI,CAAC;MAAEW,OAAO,EAAE;IAAsB,CAAC,EAAE;MAAEU,MAAM,EAAE;IAAI,CAAC,CAAC;EACpE,CAAC,MAAM;IACH;IACA;IACA;IACA;IACA,OAAOH,QAAQ;EACnB;AACJ;AAAC,IAAAF,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}