{"ast":null,"code":"var _jsxFileName = \"/Volumes/Macintosh HD - Data/react-routes/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { json, useRouteLoaderData } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const data = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw json({\n      message: \"Could not fetch details of selected event\"\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["React","json","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/Volumes/Macintosh HD - Data/react-routes/frontend/src/pages/EventDetail.js"],"sourcesContent":["import React from 'react'\nimport { json, useRouteLoaderData } from 'react-router-dom'\nimport EventItem from '../components/EventItem';\n\nconst EventDetailPage = () => {\n  const data = useRouteLoaderData('event-detail');\n\n  return (\n    <>\n      <EventItem event={data.event} />\n    </>\n  )\n}\n\nexport default EventDetailPage;\n\nexport async function loader({request, params}){\n\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/'+id);\n  \n  if(!response.ok){\n    throw json({message:\"Could not fetch details of selected event\"}, {\n      status: 500,\n    })\n  }else{\n    return response;\n  }\n\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,kBAAkB,QAAQ,kBAAkB;AAC3D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,IAAI,GAAGR,kBAAkB,CAAC,cAAc,CAAC;EAE/C,oBACEG,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAChC,CAAC;AAEP,CAAC;AAAAP,EAAA,CARKD,eAAe;EAAA,QACNN,kBAAkB;AAAA;AAAAe,EAAA,GAD3BT,eAAe;AAUrB,eAAeA,eAAe;AAE9B,OAAO,eAAeU,MAAMA,CAAAC,IAAA,EAAmB;EAAA,IAAlB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAE5C,MAAMG,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAACH,EAAE,CAAC;EAEhE,IAAG,CAACE,QAAQ,CAACE,EAAE,EAAC;IACd,MAAMzB,IAAI,CAAC;MAAC0B,OAAO,EAAC;IAA2C,CAAC,EAAE;MAChEC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAI;IACH,OAAOJ,QAAQ;EACjB;AAEF;AAAC,IAAAP,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}