{"ast":null,"code":"var _jsxFileName = \"/Volumes/Macintosh HD - Data/react-routes/frontend/src/App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { Routes, Route, RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport Homepage from './pages/HomePage';\n// import EventsPage from './pages/EventsPage';\nimport NewEventPage from './pages/NewEventPage';\nimport EventDetailPage, { loader as eventDetailLoader } from './pages/EventDetail';\nimport EditEventPage from './pages/EditEventPage';\nimport { useEffect } from 'react';\nimport RootLayout from './RootLayout';\nimport EventsRoot from './pages/EventsRoot';\nimport EventsPage, { loader as eventsLoader } from './pages/Events';\nimport ErrorPage from './pages/Error';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const router = createBrowserRouter([{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 16\n    }, this),\n    errorElement: /*#__PURE__*/_jsxDEV(ErrorPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }, this),\n    children: [{\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Homepage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 20\n      }, this)\n    }, {\n      path: 'events',\n      element: /*#__PURE__*/_jsxDEV(EventsRoot, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }, this),\n      children: [{\n        index: true,\n        element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 24\n        }, this),\n        loader: eventsLoader\n      }, {\n        path: ':eventId',\n        id: 'event-detail',\n        loader: eventDetailLoader,\n        children: [{\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 28\n          }, this)\n        }, {\n          path: \"edit\",\n          element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 28\n          }, this)\n        }]\n      }, {\n        path: \"new\",\n        element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 36\n        }, this)\n      }]\n    }]\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(RouterProvider, {\n      router: router\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Routes","Route","RouterProvider","createBrowserRouter","Homepage","NewEventPage","EventDetailPage","loader","eventDetailLoader","EditEventPage","useEffect","RootLayout","EventsRoot","EventsPage","eventsLoader","ErrorPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","errorElement","children","index","id","_c","$RefreshReg$"],"sources":["/Volumes/Macintosh HD - Data/react-routes/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { Routes, Route, RouterProvider, createBrowserRouter } from 'react-router-dom';\nimport Homepage from './pages/HomePage';\n// import EventsPage from './pages/EventsPage';\nimport NewEventPage from './pages/NewEventPage'\nimport EventDetailPage, { loader as eventDetailLoader } from './pages/EventDetail'\nimport EditEventPage from './pages/EditEventPage'\nimport { useEffect } from 'react';\nimport RootLayout from './RootLayout';\nimport EventsRoot from './pages/EventsRoot';\nimport EventsPage, { loader as eventsLoader } from './pages/Events';\nimport ErrorPage from './pages/Error';\n\nfunction App() {\n  const router = createBrowserRouter([\n    {\n      path: '/',\n      element: <RootLayout />,\n      errorElement: <ErrorPage />,\n      children: [\n        { \n          index: true, \n          element: <Homepage />\n        },\n        { \n          path: 'events', \n          element: <EventsRoot />,\n          children: [\n            { \n              index: true, \n              element: <EventsPage />,\n              loader: eventsLoader,\n            },\n            {\n              path: ':eventId',\n              id: 'event-detail',\n              loader: eventDetailLoader,\n              children: [\n                {\n                  index: true,\n                  element: <EventDetailPage />,\n                },\n                { \n                  path:\"edit\", \n                  element: <EditEventPage />\n                },\n              ]\n            },\n            { path:\"new\", element: <NewEventPage />},\n          ]\n        },\n      ]\n    }\n  ])\n  \n  return <>\n    {/* <h2>ffff</h2> */}\n    <RouterProvider router={router}>\n    </RouterProvider>\n    {/* <Routes>\n      <Route index=\"/\" element={<Homepage />}></Route>\n      <Route path=\"/events\" element={<EventsPage />}></Route>\n      <Route path=\"/events:eventId\" element={<EventDetailPage />}></Route>\n      <Route path=\"/events/new\" element={<NewEventPage />}></Route>\n      <Route path=\"/events/:eventId/edit\" element={<EditEventPage />}></Route>\n    </Routes> */}\n  </>;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,MAAM,EAAEC,KAAK,EAAEC,cAAc,EAAEC,mBAAmB,QAAQ,kBAAkB;AACrF,OAAOC,QAAQ,MAAM,kBAAkB;AACvC;AACA,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,OAAOC,eAAe,IAAIC,MAAM,IAAIC,iBAAiB,QAAQ,qBAAqB;AAClF,OAAOC,aAAa,MAAM,uBAAuB;AACjD,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,UAAU,IAAIN,MAAM,IAAIO,YAAY,QAAQ,gBAAgB;AACnE,OAAOC,SAAS,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEtC,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,MAAM,GAAGlB,mBAAmB,CAAC,CACjC;IACEmB,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEN,OAAA,CAACN,UAAU;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACvBC,YAAY,eAAEX,OAAA,CAACF,SAAS;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IAC3BE,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,IAAI;MACXP,OAAO,eAAEN,OAAA,CAACb,QAAQ;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACtB,CAAC,EACD;MACEL,IAAI,EAAE,QAAQ;MACdC,OAAO,eAAEN,OAAA,CAACL,UAAU;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;MACvBE,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,IAAI;QACXP,OAAO,eAAEN,OAAA,CAACJ,UAAU;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;QACvBpB,MAAM,EAAEO;MACV,CAAC,EACD;QACEQ,IAAI,EAAE,UAAU;QAChBS,EAAE,EAAE,cAAc;QAClBxB,MAAM,EAAEC,iBAAiB;QACzBqB,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,IAAI;UACXP,OAAO,eAAEN,OAAA,CAACX,eAAe;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAC7B,CAAC,EACD;UACEL,IAAI,EAAC,MAAM;UACXC,OAAO,eAAEN,OAAA,CAACR,aAAa;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAC3B,CAAC;MAEL,CAAC,EACD;QAAEL,IAAI,EAAC,KAAK;QAAEC,OAAO,eAAEN,OAAA,CAACZ,YAAY;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,CAAC;IAE5C,CAAC;EAEL,CAAC,CACF,CAAC;EAEF,oBAAOV,OAAA,CAAAE,SAAA;IAAAU,QAAA,eAELZ,OAAA,CAACf,cAAc;MAACmB,MAAM,EAAEA;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf;EAAC,gBAQjB,CAAC;AACL;AAACK,EAAA,GAtDQZ,GAAG;AAwDZ,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}